// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package scope;

service Main {
  rpc getCellColorByFeatures (CellColorByFeaturesRequest) returns (CellColorByFeaturesReply) {}
  rpc getCellAUCValuesByFeatures (CellAUCValuesByFeaturesRequest) returns (CellAUCValuesByFeaturesReply) {}
  rpc getCellMetaData (CellMetaDataRequest) returns (CellMetaDataReply) {}
  rpc getFeatures (FeatureRequest) returns (FeatureReply) {}
  rpc getCoordinates (CoordinatesRequest) returns (CoordinatesReply) {}
  rpc getRegulonMetaData (RegulonMetaDataRequest) returns (RegulonMetaDataReply) {}
  rpc getMarkerGenes (MarkerGenesRequest) returns (MarkerGenesReply) {}
  rpc getMyLooms (MyLoomsRequest) returns (MyLoomsReply) {}
  rpc translateLassoSelection (TranslateLassoSelectionRequest) returns (TranslateLassoSelectionReply) {}
  rpc getCellIDs (CellIDsRequest) returns (CellIDsReply) {}
  rpc doGeneSetEnrichment (GeneSetEnrichmentRequest) returns (stream GeneSetEnrichmentReply) {}
  rpc getVmax (VmaxRequest) returns (VmaxReply) {}
  rpc getUUID (UUIDRequest) returns (UUIDReply) {}
  rpc getRemainingUUIDTime (RemainingUUIDTimeRequest) returns (RemainingUUIDTimeReply) {}
  rpc loomUploaded (LoomUploadedRequest) returns (LoomUploadedReply) {}
  rpc getMyGeneSets (MyGeneSetsRequest) returns (MyGeneSetsReply) {}
  rpc deleteUserFile (DeleteUserFileRequest) returns (DeleteUserFileReply) {}
  rpc downloadSubLoom (DownloadSubLoomRequest) returns (stream DownloadSubLoomReply) {}
}

message ErrorReply {
  string type=1;
  string message=2;
}

message CellColorByFeaturesRequest {
  string loom_file_path=1;
  repeated string feature=2;
  repeated string feature_type=3;
  bool has_log_transform=4;
  bool has_cpm_transform=5;
  repeated float threshold=6;
  bool scale_thresholded=7;
  repeated Annotation annotation=8;
  repeated float vmax=9;
  string logic=10;
}

message ColorLegend {
  repeated string values=1;
  repeated string colors=2;
}

message CellColorByFeaturesReply {
  bool has_add_compression_layer=1;
  bytes compressed_color=2;
  repeated string color=3;
  repeated float vmax=4;
  repeated float max_vmax=5;
  repeated int32 cell_indices=6;
  ColorLegend legend=7;
  ErrorReply error=8;
}

message CellAUCValuesByFeaturesRequest {
  string loom_file_path=1;
  repeated string feature=2;
  repeated string feature_type=3;
}

message CellAUCValuesByFeaturesReply{
  repeated float value=1;
}

message FeatureRequest {
  string loom_file_path=1;
  string query=2;
}

message CellMetaDataRequest {
  string loom_file_path=1;
  repeated int32 cell_indices=2; // List of cell indices to return, empty list = all cells
  repeated string selected_genes=3; // List of genes to return epxression values for
  bool has_log_transform=4;
  bool has_cpm_transform=5;
  repeated string selected_regulons=6; // As above, for regulons and AUC values
  repeated int32 clusterings=7; // IDs of clustering values to return per cell
  repeated string annotations=8; // String name of annotations to return (from global metadata)

}

message FeatureReply {
  repeated string feature=1;
  repeated string feature_type=2;
  repeated string feature_description=3;
}

message CoordinatesRequest {
  string loom_file_path=1;
  int32 coordinates_id=2;
  repeated Annotation annotation=3;
  string logic=4;
}


message CoordinatesReply {
  repeated float x=1;
  repeated float y=2;
  repeated int32 cell_indices=3;
}

message Annotation {
  string name=1;
  repeated string values=2;
}

message Coordinate {
  float x=1;
  float y=2;
}

message Edge {
  string source=1;
  string target=2;
}

message Trajectory {
  repeated string nodes=1;
  repeated Edge edges=2;
  repeated Coordinate coordinates=3;
}

message Embedding {
  int32 id=1;
  string name=2;
  Trajectory trajectory=3;
}

message ClusterMarkerMetric {
  string accessor=1;
  string name=2;
  string description=3;
}

message ClusterAnnotation {
  int32 id=1;
  string description=2;
}

message Clustering {
  int32 id=1;
  string group=2;
  string name=3;
  repeated ClusterMarkerMetric cluster_marker_metrics=4;
  repeated ClusterAnnotation clusters=5;
}

message CellMetaData {
  repeated Annotation annotations=1;
  repeated Embedding embeddings=2;
  repeated Clustering clusterings=3;
}

message AUCThreshold {
  string name=1;
  float threshold=2;
}

message Regulon {
  repeated string genes=1;
  repeated AUCThreshold auto_thresholds=2;
  string default_threshold=3;
  string motif_name=4;
}

message FileMetaData {
  bool has_regulons_auc=1;
  bool has_gene_sets=2;
  bool has_clusterings=3;
  bool has_extra_embeddings=4;
  bool has_global_meta=5;
}

message FeatureValues {
  repeated float features=1;
}

message CellAnnotations {
  repeated string annotations=1;
}

message CellClusters {
  repeated int32 clusters=1;
}

message CellMetaDataReply {
  repeated CellClusters cluster_ids=1;
  repeated FeatureValues gene_expression=2;
  repeated FeatureValues auc_values=3;
  repeated CellAnnotations annotations=4;
}

message RegulonMetaDataRequest {
  string loom_file_path=1;
  string regulon=2;
}

message RegulonMetaDataReply {
  Regulon regulon_meta=1;
}

message MarkerGenesRequest {
  string loom_file_path=1;
  int32 clustering_id=2;
  int32 cluster_id=3;
}

message MarkerGenesMetric {
  string accessor=1;
  string name=2;
  string description=3;
  repeated float values=4;
}

message MarkerGenesReply {
  repeated string genes=1;
  repeated MarkerGenesMetric metrics=2;
}

message MyLoomsRequest {
  string uuid=1;
}

message LoomHeierarchy {
  string l1=1;
  string l2=2;
  string l3=3;

}

message MyLoom {
  string loom_file_path=1;
  string loom_display_name=2;
  int64 loom_size=3;
  CellMetaData cell_meta_data=4;
  FileMetaData file_meta_data=5;
  LoomHeierarchy loom_hierarchy=6;

}

message MyLoomsReply {
  repeated MyLoom my_looms=1;
}

message TranslateLassoSelectionRequest {
  string src_loom_file_path=1;
  string dest_loom_file_path=2;
  repeated int32 cell_indices=3;
}

message TranslateLassoSelectionReply {
  repeated int32 cell_indices=1;
}

message CellIDsRequest {
  string loom_file_path=1;
  repeated int32 cell_indices=2;
}

message CellIDsReply {
  repeated string cell_ids=1;
}

message GeneSetEnrichmentRequest {
  string loom_file_path=1;
  string gene_set_file_path=2;
  string method=3;
}

message Progress {
  float value=1;
  string status=2;
}

message GeneSetEnrichmentReply {
  Progress progress=1;
  bool is_done=2;
  CellColorByFeaturesReply cell_values=3;
}

message VmaxRequest {
  repeated string loom_file_path=1;
  repeated string feature=2;
  repeated string feature_type=3;
  bool has_log_transform=4;
  bool has_cpm_transform=5;
}

message VmaxReply {
  repeated float vmax=1;
  repeated float max_vmax=2;
}

message UUIDRequest {
  string ip=1;
}

message UUIDReply {
  string UUID=1;
}

message RemainingUUIDTimeRequest {
  string ip=1;
  string uuid=2;
  int64 mouse_events=3;
}

message RemainingUUIDTimeReply {
  string UUID=1;
  int64 time_remaining=2;
  bool sessions_limit_Reached=3;
}

message LoomUploadedRequest {
  string uuid=1;
  string filename=2;
}

message LoomUploadedReply {}

message MyGeneSet {
  string gene_set_file_path=1;
  string gene_set_display_name=2;
}

message MyGeneSetsRequest {
  string uuid=1;
}

message MyGeneSetsReply {
  repeated MyGeneSet my_gene_sets=1;
}

message DeleteUserFileRequest {
  string uuid=1;
  string file_path=2;
  string file_type=3;
}

message DeleteUserFileReply {
  bool deleted_successfully=1;
}

message DownloadSubLoomRequest {
  string loom_file_path=1;
  string feature_type=2;
  string feature_name=3;
  string feature_value=4;
  // enum Operator {
  //   EQ = "==";
  // }
  string operator=5;
  // Operator operator = 4 [default = EQ];
}

message DownloadSubLoomReply {
  string loom_file_path=1;
  int64 loom_file_size=2;
  Progress progress=3;
  bool is_done=4;
  ErrorReply error=5;
}