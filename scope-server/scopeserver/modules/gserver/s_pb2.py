# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: s.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='s.proto',
  package='scope',
  syntax='proto3',
  serialized_pb=_b('\n\x07s.proto\x12\x05scope\"\xfb\x01\n\x1a\x43\x65llColorByFeaturesRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x0f\n\x07\x66\x65\x61ture\x18\x02 \x03(\t\x12\x13\n\x0b\x66\x65\x61tureType\x18\x03 \x03(\t\x12\x17\n\x0fhasLogTransform\x18\x04 \x01(\x08\x12\x17\n\x0fhasCpmTransform\x18\x05 \x01(\x08\x12\x11\n\tthreshold\x18\x06 \x03(\x02\x12\x18\n\x10scaleThresholded\x18\x07 \x01(\x08\x12%\n\nannotation\x18\x08 \x03(\x0b\x32\x11.scope.Annotation\x12\x0c\n\x04vmax\x18\t \x03(\x02\x12\r\n\x05logic\x18\n \x01(\t\"H\n\x18\x43\x65llColorByFeaturesReply\x12\r\n\x05\x63olor\x18\x01 \x03(\t\x12\x0c\n\x04vmax\x18\x02 \x03(\x02\x12\x0f\n\x07maxVmax\x18\x03 \x03(\x02\"\\\n\x1e\x43\x65llAUCValuesByFeaturesRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x0f\n\x07\x66\x65\x61ture\x18\x02 \x03(\t\x12\x13\n\x0b\x66\x65\x61tureType\x18\x03 \x03(\t\"-\n\x1c\x43\x65llAUCValuesByFeaturesReply\x12\r\n\x05value\x18\x01 \x03(\x02\"5\n\x0e\x46\x65\x61tureRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\r\n\x05query\x18\x02 \x01(\t\"\xcd\x01\n\x13\x43\x65llMetaDataRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x13\n\x0b\x63\x65llIndices\x18\x02 \x03(\x05\x12\x15\n\rselectedGenes\x18\x03 \x03(\t\x12\x17\n\x0fhasLogTransform\x18\x04 \x01(\x08\x12\x17\n\x0fhasCpmTransform\x18\x05 \x01(\x08\x12\x18\n\x10selectedRegulons\x18\x06 \x03(\t\x12\x13\n\x0b\x63lusterings\x18\x07 \x03(\x05\x12\x13\n\x0b\x61nnotations\x18\x08 \x03(\t\"P\n\x0c\x46\x65\x61tureReply\x12\x0f\n\x07\x66\x65\x61ture\x18\x01 \x03(\t\x12\x13\n\x0b\x66\x65\x61tureType\x18\x02 \x03(\t\x12\x1a\n\x12\x66\x65\x61tureDescription\x18\x03 \x03(\t\"w\n\x12\x43oordinatesRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x15\n\rcoordinatesID\x18\x02 \x01(\x05\x12%\n\nannotation\x18\x03 \x03(\x0b\x32\x11.scope.Annotation\x12\r\n\x05logic\x18\x04 \x01(\t\"(\n\x10\x43oordinatesReply\x12\t\n\x01x\x18\x01 \x03(\x02\x12\t\n\x01y\x18\x02 \x03(\x02\"*\n\nAnnotation\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06values\x18\x02 \x03(\t\"%\n\tEmbedding\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\"4\n\x11\x43lusterAnnotation\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\"a\n\nClustering\x12\n\n\x02id\x18\x01 \x01(\x05\x12\r\n\x05group\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12*\n\x08\x63lusters\x18\x04 \x03(\x0b\x32\x18.scope.ClusterAnnotation\"\x84\x01\n\x0c\x43\x65llMetaData\x12&\n\x0b\x61nnotations\x18\x01 \x03(\x0b\x32\x11.scope.Annotation\x12$\n\nembeddings\x18\x02 \x03(\x0b\x32\x10.scope.Embedding\x12&\n\x0b\x63lusterings\x18\x03 \x03(\x0b\x32\x11.scope.Clustering\"/\n\x0c\x41UCThreshold\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tthreshold\x18\x02 \x01(\x02\"r\n\x07Regulon\x12\r\n\x05genes\x18\x01 \x03(\t\x12+\n\x0e\x61utoThresholds\x18\x02 \x03(\x0b\x32\x13.scope.AUCThreshold\x12\x18\n\x10\x64\x65\x66\x61ultThreshold\x18\x03 \x01(\t\x12\x11\n\tmotifName\x18\x04 \x01(\t\"\x86\x01\n\x0c\x46ileMetaData\x12\x16\n\x0ehasRegulonsAUC\x18\x01 \x01(\x08\x12\x13\n\x0bhasGeneSets\x18\x02 \x01(\x08\x12\x16\n\x0ehasClusterings\x18\x03 \x01(\x08\x12\x1a\n\x12hasExtraEmbeddings\x18\x04 \x01(\x08\x12\x15\n\rhasGlobalMeta\x18\x05 \x01(\x08\"!\n\rFeatureValues\x12\x10\n\x08\x66\x65\x61tures\x18\x01 \x03(\x02\"&\n\x0f\x43\x65llAnnotations\x12\x13\n\x0b\x61nnotations\x18\x01 \x03(\t\" \n\x0c\x43\x65llClusters\x12\x10\n\x08\x63lusters\x18\x01 \x03(\x05\"\xc0\x01\n\x11\x43\x65llMetaDataReply\x12\'\n\nclusterIDs\x18\x01 \x03(\x0b\x32\x13.scope.CellClusters\x12,\n\x0egeneExpression\x18\x02 \x03(\x0b\x32\x14.scope.FeatureValues\x12\'\n\taucValues\x18\x03 \x03(\x0b\x32\x14.scope.FeatureValues\x12+\n\x0b\x61nnotations\x18\x04 \x03(\x0b\x32\x16.scope.CellAnnotations\"?\n\x16RegulonMetaDataRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x0f\n\x07regulon\x18\x02 \x01(\t\";\n\x14RegulonMetaDataReply\x12#\n\x0bregulonMeta\x18\x01 \x01(\x0b\x32\x0e.scope.Regulon\"S\n\x12MarkerGenesRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x14\n\x0c\x63lusteringID\x18\x02 \x01(\x05\x12\x11\n\tclusterID\x18\x03 \x01(\x05\"!\n\x10MarkerGenesReply\x12\r\n\x05genes\x18\x01 \x03(\t\"\x10\n\x0eMyLoomsRequest\"t\n\x06MyLoom\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12)\n\x0c\x63\x65llMetaData\x18\x02 \x01(\x0b\x32\x13.scope.CellMetaData\x12)\n\x0c\x66ileMetaData\x18\x03 \x01(\x0b\x32\x13.scope.FileMetaData\".\n\x0cMyLoomsReply\x12\x1e\n\x07myLooms\x18\x01 \x03(\x0b\x32\r.scope.MyLoom\"h\n\x1eTranslateLassoSelectionRequest\x12\x17\n\x0fsrcLoomFilePath\x18\x01 \x01(\t\x12\x18\n\x10\x64\x65stLoomFilePath\x18\x02 \x01(\t\x12\x13\n\x0b\x63\x65llIndices\x18\x03 \x03(\x05\"3\n\x1cTranslateLassoSelectionReply\x12\x13\n\x0b\x63\x65llIndices\x18\x01 \x03(\x05\";\n\x0e\x43\x65llIDsRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x01(\t\x12\x13\n\x0b\x63\x65llIndices\x18\x02 \x03(\x05\"\x1f\n\x0c\x43\x65llIDsReply\x12\x0f\n\x07\x63\x65llIds\x18\x01 \x03(\t\"{\n\x0bVmaxRequest\x12\x14\n\x0cloomFilePath\x18\x01 \x03(\t\x12\x0f\n\x07\x66\x65\x61ture\x18\x02 \x03(\t\x12\x13\n\x0b\x66\x65\x61tureType\x18\x03 \x03(\t\x12\x17\n\x0fhasLogTransform\x18\x04 \x01(\x08\x12\x17\n\x0fhasCpmTransform\x18\x05 \x01(\x08\"*\n\tVmaxReply\x12\x0c\n\x04vmax\x18\x01 \x03(\x02\x12\x0f\n\x07maxVmax\x18\x02 \x03(\x02\"\x19\n\x0bUUIDRequest\x12\n\n\x02ip\x18\x01 \x01(\t\"\x19\n\tUUIDReply\x12\x0c\n\x04UUID\x18\x01 \x01(\t2\x85\x07\n\x04Main\x12^\n\x16getCellColorByFeatures\x12!.scope.CellColorByFeaturesRequest\x1a\x1f.scope.CellColorByFeaturesReply\"\x00\x12j\n\x1agetCellAUCValuesByFeatures\x12%.scope.CellAUCValuesByFeaturesRequest\x1a#.scope.CellAUCValuesByFeaturesReply\"\x00\x12I\n\x0fgetCellMetaData\x12\x1a.scope.CellMetaDataRequest\x1a\x18.scope.CellMetaDataReply\"\x00\x12;\n\x0bgetFeatures\x12\x15.scope.FeatureRequest\x1a\x13.scope.FeatureReply\"\x00\x12\x46\n\x0egetCoordinates\x12\x19.scope.CoordinatesRequest\x1a\x17.scope.CoordinatesReply\"\x00\x12R\n\x12getRegulonMetaData\x12\x1d.scope.RegulonMetaDataRequest\x1a\x1b.scope.RegulonMetaDataReply\"\x00\x12\x46\n\x0egetMarkerGenes\x12\x19.scope.MarkerGenesRequest\x1a\x17.scope.MarkerGenesReply\"\x00\x12:\n\ngetMyLooms\x12\x15.scope.MyLoomsRequest\x1a\x13.scope.MyLoomsReply\"\x00\x12g\n\x17translateLassoSelection\x12%.scope.TranslateLassoSelectionRequest\x1a#.scope.TranslateLassoSelectionReply\"\x00\x12:\n\ngetCellIDs\x12\x15.scope.CellIDsRequest\x1a\x13.scope.CellIDsReply\"\x00\x12\x31\n\x07getVmax\x12\x12.scope.VmaxRequest\x1a\x10.scope.VmaxReply\"\x00\x12\x31\n\x07getUUID\x12\x12.scope.UUIDRequest\x1a\x10.scope.UUIDReply\"\x00\x62\x06proto3')
)




_CELLCOLORBYFEATURESREQUEST = _descriptor.Descriptor(
  name='CellColorByFeaturesRequest',
  full_name='scope.CellColorByFeaturesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.CellColorByFeaturesRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='feature', full_name='scope.CellColorByFeaturesRequest.feature', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='featureType', full_name='scope.CellColorByFeaturesRequest.featureType', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasLogTransform', full_name='scope.CellColorByFeaturesRequest.hasLogTransform', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasCpmTransform', full_name='scope.CellColorByFeaturesRequest.hasCpmTransform', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='threshold', full_name='scope.CellColorByFeaturesRequest.threshold', index=5,
      number=6, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scaleThresholded', full_name='scope.CellColorByFeaturesRequest.scaleThresholded', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='annotation', full_name='scope.CellColorByFeaturesRequest.annotation', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vmax', full_name='scope.CellColorByFeaturesRequest.vmax', index=8,
      number=9, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logic', full_name='scope.CellColorByFeaturesRequest.logic', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=19,
  serialized_end=270,
)


_CELLCOLORBYFEATURESREPLY = _descriptor.Descriptor(
  name='CellColorByFeaturesReply',
  full_name='scope.CellColorByFeaturesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='color', full_name='scope.CellColorByFeaturesReply.color', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='vmax', full_name='scope.CellColorByFeaturesReply.vmax', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maxVmax', full_name='scope.CellColorByFeaturesReply.maxVmax', index=2,
      number=3, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=272,
  serialized_end=344,
)


_CELLAUCVALUESBYFEATURESREQUEST = _descriptor.Descriptor(
  name='CellAUCValuesByFeaturesRequest',
  full_name='scope.CellAUCValuesByFeaturesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.CellAUCValuesByFeaturesRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='feature', full_name='scope.CellAUCValuesByFeaturesRequest.feature', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='featureType', full_name='scope.CellAUCValuesByFeaturesRequest.featureType', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=438,
)


_CELLAUCVALUESBYFEATURESREPLY = _descriptor.Descriptor(
  name='CellAUCValuesByFeaturesReply',
  full_name='scope.CellAUCValuesByFeaturesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='scope.CellAUCValuesByFeaturesReply.value', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=440,
  serialized_end=485,
)


_FEATUREREQUEST = _descriptor.Descriptor(
  name='FeatureRequest',
  full_name='scope.FeatureRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.FeatureRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='query', full_name='scope.FeatureRequest.query', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=487,
  serialized_end=540,
)


_CELLMETADATAREQUEST = _descriptor.Descriptor(
  name='CellMetaDataRequest',
  full_name='scope.CellMetaDataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.CellMetaDataRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cellIndices', full_name='scope.CellMetaDataRequest.cellIndices', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='selectedGenes', full_name='scope.CellMetaDataRequest.selectedGenes', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasLogTransform', full_name='scope.CellMetaDataRequest.hasLogTransform', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasCpmTransform', full_name='scope.CellMetaDataRequest.hasCpmTransform', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='selectedRegulons', full_name='scope.CellMetaDataRequest.selectedRegulons', index=5,
      number=6, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clusterings', full_name='scope.CellMetaDataRequest.clusterings', index=6,
      number=7, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='annotations', full_name='scope.CellMetaDataRequest.annotations', index=7,
      number=8, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=543,
  serialized_end=748,
)


_FEATUREREPLY = _descriptor.Descriptor(
  name='FeatureReply',
  full_name='scope.FeatureReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='feature', full_name='scope.FeatureReply.feature', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='featureType', full_name='scope.FeatureReply.featureType', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='featureDescription', full_name='scope.FeatureReply.featureDescription', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=750,
  serialized_end=830,
)


_COORDINATESREQUEST = _descriptor.Descriptor(
  name='CoordinatesRequest',
  full_name='scope.CoordinatesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.CoordinatesRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='coordinatesID', full_name='scope.CoordinatesRequest.coordinatesID', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='annotation', full_name='scope.CoordinatesRequest.annotation', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logic', full_name='scope.CoordinatesRequest.logic', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=832,
  serialized_end=951,
)


_COORDINATESREPLY = _descriptor.Descriptor(
  name='CoordinatesReply',
  full_name='scope.CoordinatesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='scope.CoordinatesReply.x', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='scope.CoordinatesReply.y', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=953,
  serialized_end=993,
)


_ANNOTATION = _descriptor.Descriptor(
  name='Annotation',
  full_name='scope.Annotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='scope.Annotation.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='values', full_name='scope.Annotation.values', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=995,
  serialized_end=1037,
)


_EMBEDDING = _descriptor.Descriptor(
  name='Embedding',
  full_name='scope.Embedding',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='scope.Embedding.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='scope.Embedding.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1039,
  serialized_end=1076,
)


_CLUSTERANNOTATION = _descriptor.Descriptor(
  name='ClusterAnnotation',
  full_name='scope.ClusterAnnotation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='scope.ClusterAnnotation.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='scope.ClusterAnnotation.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1078,
  serialized_end=1130,
)


_CLUSTERING = _descriptor.Descriptor(
  name='Clustering',
  full_name='scope.Clustering',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='scope.Clustering.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='group', full_name='scope.Clustering.group', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='scope.Clustering.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clusters', full_name='scope.Clustering.clusters', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1132,
  serialized_end=1229,
)


_CELLMETADATA = _descriptor.Descriptor(
  name='CellMetaData',
  full_name='scope.CellMetaData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='annotations', full_name='scope.CellMetaData.annotations', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='embeddings', full_name='scope.CellMetaData.embeddings', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clusterings', full_name='scope.CellMetaData.clusterings', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1232,
  serialized_end=1364,
)


_AUCTHRESHOLD = _descriptor.Descriptor(
  name='AUCThreshold',
  full_name='scope.AUCThreshold',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='scope.AUCThreshold.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='threshold', full_name='scope.AUCThreshold.threshold', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1366,
  serialized_end=1413,
)


_REGULON = _descriptor.Descriptor(
  name='Regulon',
  full_name='scope.Regulon',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='genes', full_name='scope.Regulon.genes', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='autoThresholds', full_name='scope.Regulon.autoThresholds', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='defaultThreshold', full_name='scope.Regulon.defaultThreshold', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='motifName', full_name='scope.Regulon.motifName', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1415,
  serialized_end=1529,
)


_FILEMETADATA = _descriptor.Descriptor(
  name='FileMetaData',
  full_name='scope.FileMetaData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hasRegulonsAUC', full_name='scope.FileMetaData.hasRegulonsAUC', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasGeneSets', full_name='scope.FileMetaData.hasGeneSets', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasClusterings', full_name='scope.FileMetaData.hasClusterings', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasExtraEmbeddings', full_name='scope.FileMetaData.hasExtraEmbeddings', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasGlobalMeta', full_name='scope.FileMetaData.hasGlobalMeta', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1532,
  serialized_end=1666,
)


_FEATUREVALUES = _descriptor.Descriptor(
  name='FeatureValues',
  full_name='scope.FeatureValues',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='features', full_name='scope.FeatureValues.features', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1668,
  serialized_end=1701,
)


_CELLANNOTATIONS = _descriptor.Descriptor(
  name='CellAnnotations',
  full_name='scope.CellAnnotations',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='annotations', full_name='scope.CellAnnotations.annotations', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1703,
  serialized_end=1741,
)


_CELLCLUSTERS = _descriptor.Descriptor(
  name='CellClusters',
  full_name='scope.CellClusters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clusters', full_name='scope.CellClusters.clusters', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1743,
  serialized_end=1775,
)


_CELLMETADATAREPLY = _descriptor.Descriptor(
  name='CellMetaDataReply',
  full_name='scope.CellMetaDataReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='clusterIDs', full_name='scope.CellMetaDataReply.clusterIDs', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='geneExpression', full_name='scope.CellMetaDataReply.geneExpression', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='aucValues', full_name='scope.CellMetaDataReply.aucValues', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='annotations', full_name='scope.CellMetaDataReply.annotations', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1778,
  serialized_end=1970,
)


_REGULONMETADATAREQUEST = _descriptor.Descriptor(
  name='RegulonMetaDataRequest',
  full_name='scope.RegulonMetaDataRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.RegulonMetaDataRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='regulon', full_name='scope.RegulonMetaDataRequest.regulon', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1972,
  serialized_end=2035,
)


_REGULONMETADATAREPLY = _descriptor.Descriptor(
  name='RegulonMetaDataReply',
  full_name='scope.RegulonMetaDataReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regulonMeta', full_name='scope.RegulonMetaDataReply.regulonMeta', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2037,
  serialized_end=2096,
)


_MARKERGENESREQUEST = _descriptor.Descriptor(
  name='MarkerGenesRequest',
  full_name='scope.MarkerGenesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.MarkerGenesRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clusteringID', full_name='scope.MarkerGenesRequest.clusteringID', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='clusterID', full_name='scope.MarkerGenesRequest.clusterID', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2098,
  serialized_end=2181,
)


_MARKERGENESREPLY = _descriptor.Descriptor(
  name='MarkerGenesReply',
  full_name='scope.MarkerGenesReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='genes', full_name='scope.MarkerGenesReply.genes', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2183,
  serialized_end=2216,
)


_MYLOOMSREQUEST = _descriptor.Descriptor(
  name='MyLoomsRequest',
  full_name='scope.MyLoomsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2218,
  serialized_end=2234,
)


_MYLOOM = _descriptor.Descriptor(
  name='MyLoom',
  full_name='scope.MyLoom',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.MyLoom.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cellMetaData', full_name='scope.MyLoom.cellMetaData', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fileMetaData', full_name='scope.MyLoom.fileMetaData', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2236,
  serialized_end=2352,
)


_MYLOOMSREPLY = _descriptor.Descriptor(
  name='MyLoomsReply',
  full_name='scope.MyLoomsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='myLooms', full_name='scope.MyLoomsReply.myLooms', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2354,
  serialized_end=2400,
)


_TRANSLATELASSOSELECTIONREQUEST = _descriptor.Descriptor(
  name='TranslateLassoSelectionRequest',
  full_name='scope.TranslateLassoSelectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='srcLoomFilePath', full_name='scope.TranslateLassoSelectionRequest.srcLoomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='destLoomFilePath', full_name='scope.TranslateLassoSelectionRequest.destLoomFilePath', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cellIndices', full_name='scope.TranslateLassoSelectionRequest.cellIndices', index=2,
      number=3, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2402,
  serialized_end=2506,
)


_TRANSLATELASSOSELECTIONREPLY = _descriptor.Descriptor(
  name='TranslateLassoSelectionReply',
  full_name='scope.TranslateLassoSelectionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cellIndices', full_name='scope.TranslateLassoSelectionReply.cellIndices', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2508,
  serialized_end=2559,
)


_CELLIDSREQUEST = _descriptor.Descriptor(
  name='CellIDsRequest',
  full_name='scope.CellIDsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.CellIDsRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cellIndices', full_name='scope.CellIDsRequest.cellIndices', index=1,
      number=2, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2561,
  serialized_end=2620,
)


_CELLIDSREPLY = _descriptor.Descriptor(
  name='CellIDsReply',
  full_name='scope.CellIDsReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='cellIds', full_name='scope.CellIDsReply.cellIds', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2622,
  serialized_end=2653,
)


_VMAXREQUEST = _descriptor.Descriptor(
  name='VmaxRequest',
  full_name='scope.VmaxRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='loomFilePath', full_name='scope.VmaxRequest.loomFilePath', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='feature', full_name='scope.VmaxRequest.feature', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='featureType', full_name='scope.VmaxRequest.featureType', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasLogTransform', full_name='scope.VmaxRequest.hasLogTransform', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasCpmTransform', full_name='scope.VmaxRequest.hasCpmTransform', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2655,
  serialized_end=2778,
)


_VMAXREPLY = _descriptor.Descriptor(
  name='VmaxReply',
  full_name='scope.VmaxReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vmax', full_name='scope.VmaxReply.vmax', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='maxVmax', full_name='scope.VmaxReply.maxVmax', index=1,
      number=2, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2780,
  serialized_end=2822,
)


_UUIDREQUEST = _descriptor.Descriptor(
  name='UUIDRequest',
  full_name='scope.UUIDRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ip', full_name='scope.UUIDRequest.ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2824,
  serialized_end=2849,
)


_UUIDREPLY = _descriptor.Descriptor(
  name='UUIDReply',
  full_name='scope.UUIDReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='UUID', full_name='scope.UUIDReply.UUID', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2851,
  serialized_end=2876,
)

_CELLCOLORBYFEATURESREQUEST.fields_by_name['annotation'].message_type = _ANNOTATION
_COORDINATESREQUEST.fields_by_name['annotation'].message_type = _ANNOTATION
_CLUSTERING.fields_by_name['clusters'].message_type = _CLUSTERANNOTATION
_CELLMETADATA.fields_by_name['annotations'].message_type = _ANNOTATION
_CELLMETADATA.fields_by_name['embeddings'].message_type = _EMBEDDING
_CELLMETADATA.fields_by_name['clusterings'].message_type = _CLUSTERING
_REGULON.fields_by_name['autoThresholds'].message_type = _AUCTHRESHOLD
_CELLMETADATAREPLY.fields_by_name['clusterIDs'].message_type = _CELLCLUSTERS
_CELLMETADATAREPLY.fields_by_name['geneExpression'].message_type = _FEATUREVALUES
_CELLMETADATAREPLY.fields_by_name['aucValues'].message_type = _FEATUREVALUES
_CELLMETADATAREPLY.fields_by_name['annotations'].message_type = _CELLANNOTATIONS
_REGULONMETADATAREPLY.fields_by_name['regulonMeta'].message_type = _REGULON
_MYLOOM.fields_by_name['cellMetaData'].message_type = _CELLMETADATA
_MYLOOM.fields_by_name['fileMetaData'].message_type = _FILEMETADATA
_MYLOOMSREPLY.fields_by_name['myLooms'].message_type = _MYLOOM
DESCRIPTOR.message_types_by_name['CellColorByFeaturesRequest'] = _CELLCOLORBYFEATURESREQUEST
DESCRIPTOR.message_types_by_name['CellColorByFeaturesReply'] = _CELLCOLORBYFEATURESREPLY
DESCRIPTOR.message_types_by_name['CellAUCValuesByFeaturesRequest'] = _CELLAUCVALUESBYFEATURESREQUEST
DESCRIPTOR.message_types_by_name['CellAUCValuesByFeaturesReply'] = _CELLAUCVALUESBYFEATURESREPLY
DESCRIPTOR.message_types_by_name['FeatureRequest'] = _FEATUREREQUEST
DESCRIPTOR.message_types_by_name['CellMetaDataRequest'] = _CELLMETADATAREQUEST
DESCRIPTOR.message_types_by_name['FeatureReply'] = _FEATUREREPLY
DESCRIPTOR.message_types_by_name['CoordinatesRequest'] = _COORDINATESREQUEST
DESCRIPTOR.message_types_by_name['CoordinatesReply'] = _COORDINATESREPLY
DESCRIPTOR.message_types_by_name['Annotation'] = _ANNOTATION
DESCRIPTOR.message_types_by_name['Embedding'] = _EMBEDDING
DESCRIPTOR.message_types_by_name['ClusterAnnotation'] = _CLUSTERANNOTATION
DESCRIPTOR.message_types_by_name['Clustering'] = _CLUSTERING
DESCRIPTOR.message_types_by_name['CellMetaData'] = _CELLMETADATA
DESCRIPTOR.message_types_by_name['AUCThreshold'] = _AUCTHRESHOLD
DESCRIPTOR.message_types_by_name['Regulon'] = _REGULON
DESCRIPTOR.message_types_by_name['FileMetaData'] = _FILEMETADATA
DESCRIPTOR.message_types_by_name['FeatureValues'] = _FEATUREVALUES
DESCRIPTOR.message_types_by_name['CellAnnotations'] = _CELLANNOTATIONS
DESCRIPTOR.message_types_by_name['CellClusters'] = _CELLCLUSTERS
DESCRIPTOR.message_types_by_name['CellMetaDataReply'] = _CELLMETADATAREPLY
DESCRIPTOR.message_types_by_name['RegulonMetaDataRequest'] = _REGULONMETADATAREQUEST
DESCRIPTOR.message_types_by_name['RegulonMetaDataReply'] = _REGULONMETADATAREPLY
DESCRIPTOR.message_types_by_name['MarkerGenesRequest'] = _MARKERGENESREQUEST
DESCRIPTOR.message_types_by_name['MarkerGenesReply'] = _MARKERGENESREPLY
DESCRIPTOR.message_types_by_name['MyLoomsRequest'] = _MYLOOMSREQUEST
DESCRIPTOR.message_types_by_name['MyLoom'] = _MYLOOM
DESCRIPTOR.message_types_by_name['MyLoomsReply'] = _MYLOOMSREPLY
DESCRIPTOR.message_types_by_name['TranslateLassoSelectionRequest'] = _TRANSLATELASSOSELECTIONREQUEST
DESCRIPTOR.message_types_by_name['TranslateLassoSelectionReply'] = _TRANSLATELASSOSELECTIONREPLY
DESCRIPTOR.message_types_by_name['CellIDsRequest'] = _CELLIDSREQUEST
DESCRIPTOR.message_types_by_name['CellIDsReply'] = _CELLIDSREPLY
DESCRIPTOR.message_types_by_name['VmaxRequest'] = _VMAXREQUEST
DESCRIPTOR.message_types_by_name['VmaxReply'] = _VMAXREPLY
DESCRIPTOR.message_types_by_name['UUIDRequest'] = _UUIDREQUEST
DESCRIPTOR.message_types_by_name['UUIDReply'] = _UUIDREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CellColorByFeaturesRequest = _reflection.GeneratedProtocolMessageType('CellColorByFeaturesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CELLCOLORBYFEATURESREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellColorByFeaturesRequest)
  ))
_sym_db.RegisterMessage(CellColorByFeaturesRequest)

CellColorByFeaturesReply = _reflection.GeneratedProtocolMessageType('CellColorByFeaturesReply', (_message.Message,), dict(
  DESCRIPTOR = _CELLCOLORBYFEATURESREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellColorByFeaturesReply)
  ))
_sym_db.RegisterMessage(CellColorByFeaturesReply)

CellAUCValuesByFeaturesRequest = _reflection.GeneratedProtocolMessageType('CellAUCValuesByFeaturesRequest', (_message.Message,), dict(
  DESCRIPTOR = _CELLAUCVALUESBYFEATURESREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellAUCValuesByFeaturesRequest)
  ))
_sym_db.RegisterMessage(CellAUCValuesByFeaturesRequest)

CellAUCValuesByFeaturesReply = _reflection.GeneratedProtocolMessageType('CellAUCValuesByFeaturesReply', (_message.Message,), dict(
  DESCRIPTOR = _CELLAUCVALUESBYFEATURESREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellAUCValuesByFeaturesReply)
  ))
_sym_db.RegisterMessage(CellAUCValuesByFeaturesReply)

FeatureRequest = _reflection.GeneratedProtocolMessageType('FeatureRequest', (_message.Message,), dict(
  DESCRIPTOR = _FEATUREREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.FeatureRequest)
  ))
_sym_db.RegisterMessage(FeatureRequest)

CellMetaDataRequest = _reflection.GeneratedProtocolMessageType('CellMetaDataRequest', (_message.Message,), dict(
  DESCRIPTOR = _CELLMETADATAREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellMetaDataRequest)
  ))
_sym_db.RegisterMessage(CellMetaDataRequest)

FeatureReply = _reflection.GeneratedProtocolMessageType('FeatureReply', (_message.Message,), dict(
  DESCRIPTOR = _FEATUREREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.FeatureReply)
  ))
_sym_db.RegisterMessage(FeatureReply)

CoordinatesRequest = _reflection.GeneratedProtocolMessageType('CoordinatesRequest', (_message.Message,), dict(
  DESCRIPTOR = _COORDINATESREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CoordinatesRequest)
  ))
_sym_db.RegisterMessage(CoordinatesRequest)

CoordinatesReply = _reflection.GeneratedProtocolMessageType('CoordinatesReply', (_message.Message,), dict(
  DESCRIPTOR = _COORDINATESREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CoordinatesReply)
  ))
_sym_db.RegisterMessage(CoordinatesReply)

Annotation = _reflection.GeneratedProtocolMessageType('Annotation', (_message.Message,), dict(
  DESCRIPTOR = _ANNOTATION,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.Annotation)
  ))
_sym_db.RegisterMessage(Annotation)

Embedding = _reflection.GeneratedProtocolMessageType('Embedding', (_message.Message,), dict(
  DESCRIPTOR = _EMBEDDING,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.Embedding)
  ))
_sym_db.RegisterMessage(Embedding)

ClusterAnnotation = _reflection.GeneratedProtocolMessageType('ClusterAnnotation', (_message.Message,), dict(
  DESCRIPTOR = _CLUSTERANNOTATION,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.ClusterAnnotation)
  ))
_sym_db.RegisterMessage(ClusterAnnotation)

Clustering = _reflection.GeneratedProtocolMessageType('Clustering', (_message.Message,), dict(
  DESCRIPTOR = _CLUSTERING,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.Clustering)
  ))
_sym_db.RegisterMessage(Clustering)

CellMetaData = _reflection.GeneratedProtocolMessageType('CellMetaData', (_message.Message,), dict(
  DESCRIPTOR = _CELLMETADATA,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellMetaData)
  ))
_sym_db.RegisterMessage(CellMetaData)

AUCThreshold = _reflection.GeneratedProtocolMessageType('AUCThreshold', (_message.Message,), dict(
  DESCRIPTOR = _AUCTHRESHOLD,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.AUCThreshold)
  ))
_sym_db.RegisterMessage(AUCThreshold)

Regulon = _reflection.GeneratedProtocolMessageType('Regulon', (_message.Message,), dict(
  DESCRIPTOR = _REGULON,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.Regulon)
  ))
_sym_db.RegisterMessage(Regulon)

FileMetaData = _reflection.GeneratedProtocolMessageType('FileMetaData', (_message.Message,), dict(
  DESCRIPTOR = _FILEMETADATA,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.FileMetaData)
  ))
_sym_db.RegisterMessage(FileMetaData)

FeatureValues = _reflection.GeneratedProtocolMessageType('FeatureValues', (_message.Message,), dict(
  DESCRIPTOR = _FEATUREVALUES,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.FeatureValues)
  ))
_sym_db.RegisterMessage(FeatureValues)

CellAnnotations = _reflection.GeneratedProtocolMessageType('CellAnnotations', (_message.Message,), dict(
  DESCRIPTOR = _CELLANNOTATIONS,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellAnnotations)
  ))
_sym_db.RegisterMessage(CellAnnotations)

CellClusters = _reflection.GeneratedProtocolMessageType('CellClusters', (_message.Message,), dict(
  DESCRIPTOR = _CELLCLUSTERS,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellClusters)
  ))
_sym_db.RegisterMessage(CellClusters)

CellMetaDataReply = _reflection.GeneratedProtocolMessageType('CellMetaDataReply', (_message.Message,), dict(
  DESCRIPTOR = _CELLMETADATAREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellMetaDataReply)
  ))
_sym_db.RegisterMessage(CellMetaDataReply)

RegulonMetaDataRequest = _reflection.GeneratedProtocolMessageType('RegulonMetaDataRequest', (_message.Message,), dict(
  DESCRIPTOR = _REGULONMETADATAREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.RegulonMetaDataRequest)
  ))
_sym_db.RegisterMessage(RegulonMetaDataRequest)

RegulonMetaDataReply = _reflection.GeneratedProtocolMessageType('RegulonMetaDataReply', (_message.Message,), dict(
  DESCRIPTOR = _REGULONMETADATAREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.RegulonMetaDataReply)
  ))
_sym_db.RegisterMessage(RegulonMetaDataReply)

MarkerGenesRequest = _reflection.GeneratedProtocolMessageType('MarkerGenesRequest', (_message.Message,), dict(
  DESCRIPTOR = _MARKERGENESREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.MarkerGenesRequest)
  ))
_sym_db.RegisterMessage(MarkerGenesRequest)

MarkerGenesReply = _reflection.GeneratedProtocolMessageType('MarkerGenesReply', (_message.Message,), dict(
  DESCRIPTOR = _MARKERGENESREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.MarkerGenesReply)
  ))
_sym_db.RegisterMessage(MarkerGenesReply)

MyLoomsRequest = _reflection.GeneratedProtocolMessageType('MyLoomsRequest', (_message.Message,), dict(
  DESCRIPTOR = _MYLOOMSREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.MyLoomsRequest)
  ))
_sym_db.RegisterMessage(MyLoomsRequest)

MyLoom = _reflection.GeneratedProtocolMessageType('MyLoom', (_message.Message,), dict(
  DESCRIPTOR = _MYLOOM,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.MyLoom)
  ))
_sym_db.RegisterMessage(MyLoom)

MyLoomsReply = _reflection.GeneratedProtocolMessageType('MyLoomsReply', (_message.Message,), dict(
  DESCRIPTOR = _MYLOOMSREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.MyLoomsReply)
  ))
_sym_db.RegisterMessage(MyLoomsReply)

TranslateLassoSelectionRequest = _reflection.GeneratedProtocolMessageType('TranslateLassoSelectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _TRANSLATELASSOSELECTIONREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.TranslateLassoSelectionRequest)
  ))
_sym_db.RegisterMessage(TranslateLassoSelectionRequest)

TranslateLassoSelectionReply = _reflection.GeneratedProtocolMessageType('TranslateLassoSelectionReply', (_message.Message,), dict(
  DESCRIPTOR = _TRANSLATELASSOSELECTIONREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.TranslateLassoSelectionReply)
  ))
_sym_db.RegisterMessage(TranslateLassoSelectionReply)

CellIDsRequest = _reflection.GeneratedProtocolMessageType('CellIDsRequest', (_message.Message,), dict(
  DESCRIPTOR = _CELLIDSREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellIDsRequest)
  ))
_sym_db.RegisterMessage(CellIDsRequest)

CellIDsReply = _reflection.GeneratedProtocolMessageType('CellIDsReply', (_message.Message,), dict(
  DESCRIPTOR = _CELLIDSREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.CellIDsReply)
  ))
_sym_db.RegisterMessage(CellIDsReply)

VmaxRequest = _reflection.GeneratedProtocolMessageType('VmaxRequest', (_message.Message,), dict(
  DESCRIPTOR = _VMAXREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.VmaxRequest)
  ))
_sym_db.RegisterMessage(VmaxRequest)

VmaxReply = _reflection.GeneratedProtocolMessageType('VmaxReply', (_message.Message,), dict(
  DESCRIPTOR = _VMAXREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.VmaxReply)
  ))
_sym_db.RegisterMessage(VmaxReply)

UUIDRequest = _reflection.GeneratedProtocolMessageType('UUIDRequest', (_message.Message,), dict(
  DESCRIPTOR = _UUIDREQUEST,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.UUIDRequest)
  ))
_sym_db.RegisterMessage(UUIDRequest)

UUIDReply = _reflection.GeneratedProtocolMessageType('UUIDReply', (_message.Message,), dict(
  DESCRIPTOR = _UUIDREPLY,
  __module__ = 's_pb2'
  # @@protoc_insertion_point(class_scope:scope.UUIDReply)
  ))
_sym_db.RegisterMessage(UUIDReply)



_MAIN = _descriptor.ServiceDescriptor(
  name='Main',
  full_name='scope.Main',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2879,
  serialized_end=3780,
  methods=[
  _descriptor.MethodDescriptor(
    name='getCellColorByFeatures',
    full_name='scope.Main.getCellColorByFeatures',
    index=0,
    containing_service=None,
    input_type=_CELLCOLORBYFEATURESREQUEST,
    output_type=_CELLCOLORBYFEATURESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getCellAUCValuesByFeatures',
    full_name='scope.Main.getCellAUCValuesByFeatures',
    index=1,
    containing_service=None,
    input_type=_CELLAUCVALUESBYFEATURESREQUEST,
    output_type=_CELLAUCVALUESBYFEATURESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getCellMetaData',
    full_name='scope.Main.getCellMetaData',
    index=2,
    containing_service=None,
    input_type=_CELLMETADATAREQUEST,
    output_type=_CELLMETADATAREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getFeatures',
    full_name='scope.Main.getFeatures',
    index=3,
    containing_service=None,
    input_type=_FEATUREREQUEST,
    output_type=_FEATUREREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getCoordinates',
    full_name='scope.Main.getCoordinates',
    index=4,
    containing_service=None,
    input_type=_COORDINATESREQUEST,
    output_type=_COORDINATESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getRegulonMetaData',
    full_name='scope.Main.getRegulonMetaData',
    index=5,
    containing_service=None,
    input_type=_REGULONMETADATAREQUEST,
    output_type=_REGULONMETADATAREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getMarkerGenes',
    full_name='scope.Main.getMarkerGenes',
    index=6,
    containing_service=None,
    input_type=_MARKERGENESREQUEST,
    output_type=_MARKERGENESREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getMyLooms',
    full_name='scope.Main.getMyLooms',
    index=7,
    containing_service=None,
    input_type=_MYLOOMSREQUEST,
    output_type=_MYLOOMSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='translateLassoSelection',
    full_name='scope.Main.translateLassoSelection',
    index=8,
    containing_service=None,
    input_type=_TRANSLATELASSOSELECTIONREQUEST,
    output_type=_TRANSLATELASSOSELECTIONREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getCellIDs',
    full_name='scope.Main.getCellIDs',
    index=9,
    containing_service=None,
    input_type=_CELLIDSREQUEST,
    output_type=_CELLIDSREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getVmax',
    full_name='scope.Main.getVmax',
    index=10,
    containing_service=None,
    input_type=_VMAXREQUEST,
    output_type=_VMAXREPLY,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='getUUID',
    full_name='scope.Main.getUUID',
    index=11,
    containing_service=None,
    input_type=_UUIDREQUEST,
    output_type=_UUIDREPLY,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_MAIN)

DESCRIPTOR.services_by_name['Main'] = _MAIN

# @@protoc_insertion_point(module_scope)
