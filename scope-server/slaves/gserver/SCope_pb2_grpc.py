# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import SCope_pb2 as SCope__pb2


class SCopeStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.getCellColorByFeatures = channel.unary_unary(
        '/scope.SCope/getCellColorByFeatures',
        request_serializer=SCope__pb2.CellColorByFeaturesRequest.SerializeToString,
        response_deserializer=SCope__pb2.CellColorByFeaturesReply.FromString,
        )
    self.getFeatures = channel.unary_unary(
        '/scope.SCope/getFeatures',
        request_serializer=SCope__pb2.FeatureRequest.SerializeToString,
        response_deserializer=SCope__pb2.FeatureReply.FromString,
        )


class SCopeServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def getCellColorByFeatures(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def getFeatures(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_SCopeServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'getCellColorByFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.getCellColorByFeatures,
          request_deserializer=SCope__pb2.CellColorByFeaturesRequest.FromString,
          response_serializer=SCope__pb2.CellColorByFeaturesReply.SerializeToString,
      ),
      'getFeatures': grpc.unary_unary_rpc_method_handler(
          servicer.getFeatures,
          request_deserializer=SCope__pb2.FeatureRequest.FromString,
          response_serializer=SCope__pb2.FeatureReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'scope.SCope', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
